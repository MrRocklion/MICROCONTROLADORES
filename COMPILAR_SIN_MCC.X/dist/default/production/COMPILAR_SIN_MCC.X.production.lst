

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 02 17:01:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1939 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  0110                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018F                     	;# 
   120  0190                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020D                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0298                     	;# 
   160  0298                     	;# 
   161  0299                     	;# 
   162  029A                     	;# 
   163  029B                     	;# 
   164  029C                     	;# 
   165  029C                     	;# 
   166  029D                     	;# 
   167  029E                     	;# 
   168  029F                     	;# 
   169  0311                     	;# 
   170  0311                     	;# 
   171  0312                     	;# 
   172  0313                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0315                     	;# 
   176  0316                     	;# 
   177  0318                     	;# 
   178  0318                     	;# 
   179  0319                     	;# 
   180  031A                     	;# 
   181  031C                     	;# 
   182  031C                     	;# 
   183  031D                     	;# 
   184  031E                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  0791                     	;# 
   195  0792                     	;# 
   196  0793                     	;# 
   197  0794                     	;# 
   198  0795                     	;# 
   199  0798                     	;# 
   200  0799                     	;# 
   201  079A                     	;# 
   202  07A0                     	;# 
   203  07A1                     	;# 
   204  07A2                     	;# 
   205  07A3                     	;# 
   206  07A4                     	;# 
   207  07A5                     	;# 
   208  07A6                     	;# 
   209  07A7                     	;# 
   210  07A8                     	;# 
   211  07A9                     	;# 
   212  07AA                     	;# 
   213  07AB                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0110                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  018F                     	;# 
   295  0190                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020D                     	;# 
   317  0210                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029F                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  031C                     	;# 
   357  031C                     	;# 
   358  031D                     	;# 
   359  031E                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0791                     	;# 
   370  0792                     	;# 
   371  0793                     	;# 
   372  0794                     	;# 
   373  0795                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A2                     	;# 
   380  07A3                     	;# 
   381  07A4                     	;# 
   382  07A5                     	;# 
   383  07A6                     	;# 
   384  07A7                     	;# 
   385  07A8                     	;# 
   386  07A9                     	;# 
   387  07AA                     	;# 
   388  07AB                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE9                     	;# 
   395  0FEA                     	;# 
   396  0FEB                     	;# 
   397  0FED                     	;# 
   398  0FEE                     	;# 
   399  0FEF                     	;# 
   400                           
   401                           	psect	nvCOMMON
   402  0070                     __pnvCOMMON:
   403  0070                     _TMR0_InterruptHandler:
   404  0070                     	ds	2
   405  0072                     _timer0ReloadVal:
   406  0072                     	ds	1
   407  000B                     _INTCONbits	set	11
   408  0015                     _TMR0	set	21
   409  0095                     _OPTION_REG	set	149
   410  008D                     _TRISB	set	141
   411  008C                     _TRISA	set	140
   412  0090                     _TRISE	set	144
   413  0098                     _OSCTUNE	set	152
   414  0099                     _OSCCON	set	153
   415  010D                     _LATB	set	269
   416  0116                     _BORCON	set	278
   417  018C                     _ANSELA	set	396
   418  018D                     _ANSELB	set	397
   419                           
   420                           	psect	cinit
   421  0019                     start_initialization:	
   422                           ; #config settings
   423                           
   424  0019                     __initialization:
   425                           
   426                           ; Clear objects allocated to COMMON
   427  0019  01F6               	clrf	__pbssCOMMON& (0+127)
   428  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   429  001B                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432  001B                     __end_of__initialization:
   433  001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   434  001C  0020               	movlb	0
   435  001D  3180  281F         	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  0076                     __pbssCOMMON:
   439  0076                     _i:
   440  0076                     	ds	2
   441                           
   442                           	psect	cstackCOMMON
   443  0073                     __pcstackCOMMON:
   444  0073                     ?_TMR0_ISR:
   445  0073                     ??_TMR0_ISR:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0073                     ?_TMR0_SetInterruptHandler:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0073                     ?_TMR0_DefaultInterruptHandler:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0073                     ??_TMR0_DefaultInterruptHandler:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0073                     ?_timer0:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0073                     ??_timer0:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0073                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
   467                           ; 1 bytes @ 0x0
   468                           
   469                           
   470                           ; 2 bytes @ 0x0
   471  0073                     	ds	2
   472  0075                     ??_TMR0_SetInterruptHandler:
   473  0075                     ??_main:	
   474                           ; 1 bytes @ 0x2
   475                           
   476                           
   477                           ; 1 bytes @ 0x2
   478  0075                     	ds	1
   479                           
   480                           	psect	maintext
   481  001F                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 97 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : B1F/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels required when called: 4
   507 ;; This function calls:
   508 ;;		_TMR0_SetInterruptHandler
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  001F                     _main:
   517  001F                     l787:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 99:     OSCCON = 0x02;
   523  001F  3002               	movlw	2
   524  0020  0021               	movlb	1	; select bank1
   525  0021  0099               	movwf	25	;volatile
   526  0022                     l789:
   527                           
   528                           ;main.c: 101:     OSCTUNE = 0x00;
   529  0022  0198               	clrf	24	;volatile
   530  0023                     l791:
   531                           
   532                           ;main.c: 103:     BORCON = 0x00;
   533  0023  0022               	movlb	2	; select bank2
   534  0024  0196               	clrf	22	;volatile
   535                           
   536                           ;main.c: 106:     TRISE = 0x0F;
   537  0025  300F               	movlw	15
   538  0026  0021               	movlb	1	; select bank1
   539  0027  0090               	movwf	16	;volatile
   540                           
   541                           ;main.c: 107:     TRISA = 0xFF;
   542  0028  30FF               	movlw	255
   543  0029  008C               	movwf	12	;volatile
   544  002A                     l793:
   545                           
   546                           ;main.c: 108:     TRISB = 0x00;
   547  002A  018D               	clrf	13	;volatile
   548  002B                     l795:
   549                           
   550                           ;main.c: 112:     ANSELB = 0x00;
   551  002B  0023               	movlb	3	; select bank3
   552  002C  018D               	clrf	13	;volatile
   553  002D                     l797:
   554                           
   555                           ;main.c: 113:     ANSELA = 0x00;
   556  002D  018C               	clrf	12	;volatile
   557  002E                     l799:
   558                           
   559                           ;main.c: 115:     INTCONbits.TMR0IE = 1;
   560  002E  168B               	bsf	11,5	;volatile
   561  002F                     l801:
   562                           
   563                           ;main.c: 116:     INTCONbits.TMR0IF = 0;
   564  002F  110B               	bcf	11,2	;volatile
   565  0030                     l803:
   566                           
   567                           ;main.c: 117:     INTCONbits.GIE = 1;
   568  0030  178B               	bsf	11,7	;volatile
   569                           
   570                           ;main.c: 119:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 & 0x3F));
   571  0031  0021               	movlb	1	; select bank1
   572  0032  0815               	movf	21,w	;volatile
   573  0033  39C0               	andlw	192
   574  0034  3815               	iorlw	21
   575  0035  0095               	movwf	21	;volatile
   576  0036                     l805:
   577                           
   578                           ;main.c: 121:     timer0ReloadVal= 14;
   579  0036  300E               	movlw	14
   580  0037  00F5               	movwf	??_main
   581  0038  0875               	movf	??_main,w
   582  0039  00F2               	movwf	_timer0ReloadVal	;volatile
   583  003A                     l807:
   584                           
   585                           ;main.c: 122:     TMR0 = 40;
   586  003A  3028               	movlw	40
   587  003B  0020               	movlb	0	; select bank0
   588  003C  0095               	movwf	21	;volatile
   589  003D                     l809:
   590                           
   591                           ;main.c: 123:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   592  003D  3080               	movlw	low _TMR0_DefaultInterruptHandler
   593  003E  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
   594  003F  3000               	movlw	high _TMR0_DefaultInterruptHandler
   595  0040  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
   596  0041  3180  208E  3180   	fcall	_TMR0_SetInterruptHandler
   597  0044  2858               	goto	l823
   598  0045                     l811:
   599                           
   600                           ;main.c: 128:             LATB = 0b01100001;
   601  0045  3061               	movlw	97
   602  0046  0022               	movlb	2	; select bank2
   603  0047  008D               	movwf	13	;volatile
   604                           
   605                           ;main.c: 129:             break;
   606  0048  2858               	goto	l823
   607  0049                     l813:
   608                           
   609                           ;main.c: 131:             LATB = 0b11110010;
   610  0049  30F2               	movlw	242
   611  004A  0022               	movlb	2	; select bank2
   612  004B  008D               	movwf	13	;volatile
   613                           
   614                           ;main.c: 132:             break;
   615  004C  2858               	goto	l823
   616  004D                     l815:
   617                           
   618                           ;main.c: 134:             LATB = 0b10110110;
   619  004D  30B6               	movlw	182
   620  004E  0022               	movlb	2	; select bank2
   621  004F  008D               	movwf	13	;volatile
   622                           
   623                           ;main.c: 135:             break;
   624  0050  2858               	goto	l823
   625  0051                     l817:
   626                           
   627                           ;main.c: 137:             LATB = 0b11100100;
   628  0051  30E4               	movlw	228
   629  0052  0022               	movlb	2	; select bank2
   630  0053  008D               	movwf	13	;volatile
   631                           
   632                           ;main.c: 138:             break;
   633  0054  2858               	goto	l823
   634  0055                     l819:
   635                           
   636                           ;main.c: 140:             LATB = 0b11110110;
   637  0055  30F6               	movlw	246
   638  0056  0022               	movlb	2	; select bank2
   639  0057  008D               	movwf	13	;volatile
   640  0058                     l823:	
   641                           ;main.c: 141:             break;
   642                           
   643                           
   644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   645                           ; Switch size 1, requested type "simple"
   646                           ; Number of cases is 1, Range of values is 0 to 0
   647                           ; switch strategies available:
   648                           ; Name         Instructions Cycles
   649                           ; simple_byte            4     3 (average)
   650                           ; direct_byte            8     6 (fixed)
   651                           ; jumptable            260     6 (fixed)
   652                           ;	Chosen strategy is simple_byte
   653  0058  0877               	movf	_i+1,w
   654  0059  3A00               	xorlw	0	; case 0
   655  005A  1903               	skipnz
   656  005B  285D               	goto	l861
   657  005C  2858               	goto	l823
   658  005D                     l861:
   659                           
   660                           ; Switch size 1, requested type "simple"
   661                           ; Number of cases is 5, Range of values is 0 to 4
   662                           ; switch strategies available:
   663                           ; Name         Instructions Cycles
   664                           ; direct_byte           16     6 (fixed)
   665                           ; simple_byte           16     9 (average)
   666                           ; jumptable            260     6 (fixed)
   667                           ;	Chosen strategy is simple_byte
   668  005D  0876               	movf	_i,w
   669  005E  3A00               	xorlw	0	; case 0
   670  005F  1903               	skipnz
   671  0060  2845               	goto	l811
   672  0061  3A01               	xorlw	1	; case 1
   673  0062  1903               	skipnz
   674  0063  2849               	goto	l813
   675  0064  3A03               	xorlw	3	; case 2
   676  0065  1903               	skipnz
   677  0066  284D               	goto	l815
   678  0067  3A01               	xorlw	1	; case 3
   679  0068  1903               	skipnz
   680  0069  2851               	goto	l817
   681  006A  3A07               	xorlw	7	; case 4
   682  006B  1903               	skipnz
   683  006C  2855               	goto	l819
   684  006D  2858               	goto	l823
   685  006E  3180  2817         	ljmp	start
   686  0070                     __end_of_main:
   687                           
   688                           	psect	text1
   689  008E                     __ptext1:	
   690 ;; *************** function _TMR0_SetInterruptHandler *****************
   691 ;; Defined at:
   692 ;;		line 76 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
   695 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   711 ;;Total ram usage:        2 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 3
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _TMR0_SetInterruptHandler
   723  008E                     _TMR0_SetInterruptHandler:
   724  008E                     l785:	
   725                           ;incstack = 0
   726                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
   727                           
   728                           
   729                           ;main.c: 77:     TMR0_InterruptHandler = InterruptHandler;
   730  008E  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
   731  008F  00F1               	movwf	_TMR0_InterruptHandler+1
   732  0090  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
   733  0091  00F0               	movwf	_TMR0_InterruptHandler
   734  0092                     l46:
   735  0092  0008               	return
   736  0093                     __end_of_TMR0_SetInterruptHandler:
   737                           
   738                           	psect	intentry
   739  0004                     __pintentry:	
   740 ;; *************** function _timer0 *****************
   741 ;; Defined at:
   742 ;;		line 88 in file "main.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 2
   763 ;; This function calls:
   764 ;;		_TMR0_ISR
   765 ;; This function is called by:
   766 ;;		Interrupt level 1
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770  0004                     _timer0:
   771                           
   772                           ;incstack = 0
   773  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   774                           
   775                           ; Regs used in _timer0: [wreg+status,2+status,0+pclath+cstack]
   776  0005  3180               	pagesel	$
   777  0006                     i1l703:
   778                           
   779                           ;main.c: 89:  if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   780  0006  1E8B               	btfss	11,5	;volatile
   781  0007  2809               	goto	u3_21
   782  0008  280A               	goto	u3_20
   783  0009                     u3_21:
   784  0009  2815               	goto	i1l56
   785  000A                     u3_20:
   786  000A                     i1l705:
   787  000A  1D0B               	btfss	11,2	;volatile
   788  000B  280D               	goto	u4_21
   789  000C  280E               	goto	u4_20
   790  000D                     u4_21:
   791  000D  2815               	goto	i1l56
   792  000E                     u4_20:
   793  000E                     i1l707:
   794                           
   795                           ;main.c: 90:     {;main.c: 91:         TMR0_ISR();
   796  000E  3180  2070  3180   	fcall	_TMR0_ISR
   797  0011                     i1l709:
   798                           
   799                           ;main.c: 92:           i++;
   800  0011  3001               	movlw	1
   801  0012  07F6               	addwf	_i,f
   802  0013  3000               	movlw	0
   803  0014  3DF7               	addwfc	_i+1,f
   804  0015                     i1l56:
   805  0015  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   806  0016  0009               	retfie
   807  0017                     __end_of_timer0:
   808                           
   809                           	psect	text3
   810  0070                     __ptext3:	
   811 ;; *************** function _TMR0_ISR *****************
   812 ;; Defined at:
   813 ;;		line 59 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 1
   834 ;; This function calls:
   835 ;;		Absolute function
   836 ;;		_TMR0_DefaultInterruptHandler
   837 ;; This function is called by:
   838 ;;		_timer0
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _TMR0_ISR
   844  0070                     _TMR0_ISR:
   845  0070                     i1l685:	
   846                           ;incstack = 0
   847                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;main.c: 63:     INTCONbits.TMR0IF = 0;
   851  0070  110B               	bcf	11,2	;volatile
   852  0071                     i1l687:
   853                           
   854                           ;main.c: 65:     TMR0 = timer0ReloadVal;
   855  0071  0872               	movf	_timer0ReloadVal,w	;volatile
   856  0072  0020               	movlb	0	; select bank0
   857  0073  0095               	movwf	21	;volatile
   858  0074                     i1l689:
   859                           
   860                           ;main.c: 67:     if(TMR0_InterruptHandler)
   861  0074  0870               	movf	_TMR0_InterruptHandler,w
   862  0075  0471               	iorwf	_TMR0_InterruptHandler+1,w
   863  0076  1903               	btfsc	3,2
   864  0077  2879               	goto	u2_21
   865  0078  287A               	goto	u2_20
   866  0079                     u2_21:
   867  0079  287F               	goto	i1l43
   868  007A                     u2_20:
   869  007A                     i1l691:
   870                           
   871                           ;main.c: 68:     {;main.c: 69:         TMR0_InterruptHandler();
   872  007A  0871               	movf	_TMR0_InterruptHandler+1,w
   873  007B  008A               	movwf	10
   874  007C  0870               	movf	_TMR0_InterruptHandler,w
   875  007D  000A               	callw
   876  007E  3180               	pagesel	$
   877  007F                     i1l43:
   878  007F  0008               	return
   879  0080                     __end_of_TMR0_ISR:
   880                           
   881                           	psect	text4
   882  0080                     __ptext4:	
   883 ;; *************** function _TMR0_DefaultInterruptHandler *****************
   884 ;; Defined at:
   885 ;;		line 80 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_main
   909 ;;		_TMR0_ISR
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _TMR0_DefaultInterruptHandler
   915  0080                     _TMR0_DefaultInterruptHandler:
   916  0080                     i1l679:	
   917                           ;incstack = 0
   918                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
   919                           
   920                           
   921                           ;main.c: 83:     i+=1;
   922  0080  3001               	movlw	1
   923  0081  07F6               	addwf	_i,f
   924  0082  3000               	movlw	0
   925  0083  3DF7               	addwfc	_i+1,f
   926  0084                     i1l681:
   927                           
   928                           ;main.c: 84:     if(i==5){
   929  0084  3005               	movlw	5
   930  0085  0676               	xorwf	_i,w
   931  0086  0477               	iorwf	_i+1,w
   932  0087  1D03               	btfss	3,2
   933  0088  288A               	goto	u1_21
   934  0089  288B               	goto	u1_20
   935  008A                     u1_21:
   936  008A  288D               	goto	i1l50
   937  008B                     u1_20:
   938  008B                     i1l683:
   939                           
   940                           ;main.c: 85:         i = 0;
   941  008B  01F6               	clrf	_i
   942  008C  01F7               	clrf	_i+1
   943  008D                     i1l50:
   944  008D  0008               	return
   945  008E                     __end_of_TMR0_DefaultInterruptHandler:
   946  007E                     btemp	set	126	;btemp
   947  007E                     int$flags	set	126
   948  007E                     wtemp0	set	126
   949                           
   950                           	psect	config
   951                           
   952                           ;Config register CONFIG1 @ 0x8007
   953                           ;	Oscillator Selection
   954                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   955                           ;	Watchdog Timer Enable
   956                           ;	WDTE = OFF, WDT disabled
   957                           ;	Power-up Timer Enable
   958                           ;	PWRTE = OFF, PWRT disabled
   959                           ;	MCLR Pin Function Select
   960                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   961                           ;	Flash Program Memory Code Protection
   962                           ;	CP = OFF, Program memory code protection is disabled
   963                           ;	Data Memory Code Protection
   964                           ;	CPD = OFF, Data memory code protection is disabled
   965                           ;	Brown-out Reset Enable
   966                           ;	BOREN = ON, Brown-out Reset enabled
   967                           ;	Clock Out Enable
   968                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   969                           ;	Internal/External Switchover
   970                           ;	IESO = ON, Internal/External Switchover mode is enabled
   971                           ;	Fail-Safe Clock Monitor Enable
   972                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   973  8007                     	org	32775
   974  8007  3FE4               	dw	16356
   975                           
   976                           ;Config register CONFIG2 @ 0x8008
   977                           ;	Flash Memory Self-Write Protection
   978                           ;	WRT = OFF, Write protection off
   979                           ;	Voltage Regulator Capacitor Enable
   980                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
   981                           ;	PLL Enable
   982                           ;	PLLEN = OFF, 4x PLL disabled
   983                           ;	Stack Overflow/Underflow Reset Enable
   984                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   985                           ;	Brown-out Reset Voltage Selection
   986                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   987                           ;	Low-Voltage Programming Enable
   988                           ;	LVP = ON, Low-voltage programming enabled
   989  8008                     	org	32776
   990  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler

Critical Paths under _timer0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      98
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer0                                               0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (3) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (4) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR0_SetInterruptHandler

 _timer0 (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 02 17:01:49 2021

                                       _i 0076                                        l46 0092  
                         _timer0ReloadVal 0072                                       l801 002F  
                                     l811 0045                                       l803 0030  
                                     l813 0049                                       l805 0036  
                                     l815 004D                                       l823 0058  
                                     l807 003A                                       l817 0051  
                                     l809 003D                                       l819 0055  
                                     l861 005D                                       l791 0023  
                                     l785 008E                                       l793 002A  
                                     l795 002B                                       l787 001F  
                                     l797 002D                                       l789 0022  
                                     l799 002E                                      _LATB 010D  
                                    i1l50 008D                                      i1l43 007F  
                                    i1l56 0015                                      _TMR0 0015  
                                    u1_20 008B                                      u1_21 008A  
                                    u2_20 007A                                      u2_21 0079  
                                    u3_20 000A                                      u3_21 0009  
                                    u4_20 000E                                      u4_21 000D  
                                    _main 001F                                      btemp 007E  
                                    start 0017            ??_TMR0_DefaultInterruptHandler 0073  
                                   ?_main 0073                                     i1l703 0006  
                                   i1l705 000A                                     i1l707 000E  
                                   i1l709 0011                                     i1l681 0084  
                                   i1l683 008B                                     i1l691 007A  
                                   i1l685 0070                                     i1l679 0080  
                                   i1l687 0071                                     i1l689 0074  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISE 0090         __size_of_TMR0_SetInterruptHandler 0005  
               ?_TMR0_SetInterruptHandler 0073                          __end_of_TMR0_ISR 0080  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 0019  
                            __end_of_main 0070                                    ??_main 0075  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _BORCON 0116                                    _OSCCON 0099  
                                  _timer0 0004  TMR0_SetInterruptHandler@InterruptHandler 0073  
                 __end_of__initialization 001B                            __pcstackCOMMON 0073  
                               ?_TMR0_ISR 0073                                __pnvCOMMON 0070  
                              __pmaintext 001F          __end_of_TMR0_SetInterruptHandler 0093  
                              ??_TMR0_ISR 0073                                __pintentry 0004  
                                 ?_timer0 0073                                   _OSCTUNE 0098  
                                 __ptext1 008E                                   __ptext3 0070  
                                 __ptext4 0080                           __size_of_timer0 0013  
                    end_of_initialization 001B                  _TMR0_SetInterruptHandler 008E  
                       __size_of_TMR0_ISR 0010                            __end_of_timer0 0017  
                     start_initialization 0019                                  ??_timer0 0073  
                             __pbssCOMMON 0076                                 ___latbits 0003  
                   _TMR0_InterruptHandler 0070                ??_TMR0_SetInterruptHandler 0075  
                                _TMR0_ISR 0070                             __size_of_main 0051  
    __end_of_TMR0_DefaultInterruptHandler 008E     __size_of_TMR0_DefaultInterruptHandler 000E  
            _TMR0_DefaultInterruptHandler 0080                                  int$flags 007E  
                              _INTCONbits 000B                                  intlevel1 0000  
           ?_TMR0_DefaultInterruptHandler 0073                                _OPTION_REG 0095  
